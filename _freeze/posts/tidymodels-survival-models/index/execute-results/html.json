{
  "hash": "1ae18d2db5b219485b3c45120cc3ce66",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Predictive Survival Analysis\"\ndescription: \"Predictive survival models come to tidymodels.\"\nauthor: \"Max Kuhn\"\ndate: \"2024-04-07\"\ncategories:\n  - tidymodels\n  - survival analysis\n  - censoring\n  - R\ndraft: false\nimage: \"brier-scores-1.svg\"\n--- \n\n\n\nThe tidymodels group just released new versions of the core packages that enable (among other things) models for outcomes with censoring. \n\n[Censoring](https://en.wikipedia.org/wiki/Censoring_(statistics)) is a situation, usually seen in time-to-event data, where we have _partial information_. For example, suppose we order something online that is expected to be delivered in 2 days. After a day, we donâ€™t know the actual delivery time, but we know that the value is at least a day. This data point is *right censored* at a value of 1 day. \n\n[tidymodels.org](https://www.tidymodels.org/learn/#category=survival%20analysis) has a few articles on modeling these data with the new functionality. \n\nThe main distinction for these models is how you quantify model performance. Most modern survival models don't focus on the predicted event time but emphasize predicting the probability of the event not occurring (e.g., surviving) up to time point $t_0$. Because of this, we need to use dynamic performance metrics: these are metrics that judge performance at different points in time. Here's a plot from an analysis where the Brier statistic is computed over a relevant time range: \n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](brier-scores-1.svg){fig-align='center' width=70%}\n:::\n:::\n\n\n\nIn this case, the large Brier score values at the first time point indicates mediocre performance. As the _evaluation time_ progresses, the score becomes smaller (which is good) and the model does very well. \n\nTo include this type of model, there weren't many syntax changes: \n\n - Many functions now have an `eval_time` argument to take a vector of time points to evaluate performance measures. \n - There are some new [performance statistics](https://yardstick.tidymodels.org/reference/index.html#dynamic-survival-metrics).\n - Before modeling, you should probably create a [`Surv`](https://rdrr.io/cran/survival/man/Surv.html) object. \n\nHopefully, we will soon be doing specific tidymodels tutorials on this subject (perhaps at useR). We also have two talks accepted at [Posit Conf](https://posit.co/conference/) later this year. \n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}